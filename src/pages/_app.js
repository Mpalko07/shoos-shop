import "@/styles/normalize.css";
import "@/styles/globals.css";
import Head from "next/head";
import Header from "../components/Header";
import Footer from "../components/Footer";
import { useState } from "react";

/* eslint-disable react/prop-types */
export default function App({ Component, pageProps }) {
  const [itemOrder, setItemOrder] = useState(null);
  const [orderData, setOrderData] = useState(null);
  const [orderTotal, setOrderTotal] = useState(0);
  const [product, setProduct] = useState();
  const [productInfo, setProductInfo] = useState([]);
  const [category, setCategory] = useState();
  const [orderQty, setOrderQty] = useState(0);
  const [orderSummary, setOrderSummary] = useState([]);
  const [reviewData, setReviewData] = useState([]);
  const [reviews, setReviews] = useState([]);

  const addItemToBag = itemOrder => {
    // return if no itemOrder
    if (!itemOrder) return;

    // if no cart, create cart with item
    if (!orderData) {
      setOrderData([itemOrder]);
      return;
    }

    // If item exists in cart, update only that item
    if (orderData.some(item => item.product_id === itemOrder.product_id && item.size === itemOrder.size)) {
      const currentState = [...orderData];

      const newOrderData = currentState.map(item => {
        if (item.product_id === itemOrder.product_id && item.size === itemOrder.size) {
          item.quantity = item.quantity + itemOrder.quantity;
          const newPrice = itemOrder.price * itemOrder.quantity + item.price;
          item.price = parseFloat(newPrice.toFixed(2));
        }
        return item;
      });
      setOrderData(newOrderData);
      return;
    }

    // if item not in cart, add new item to cart
    setOrderData([...orderData, itemOrder]);
  };

  return (
    <>
      <Head>
        <title>shop shoos</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.png' />
      </Head>

      <Header itemOrder={itemOrder} orderData={orderData} setOrderTotal={setOrderTotal} orderTotal={orderTotal} category={category} setCategory={setCategory} addItemToBag={addItemToBag} />
      <main>
        <Component
          {...pageProps}
          orderData={orderData}
          setOrderData={setOrderData}
          setItemOrder={setItemOrder}
          itemOrder={itemOrder}
          productInfo={productInfo}
          setProductInfo={setProductInfo}
          orderTotal={orderTotal}
          setOrderTotal={setOrderTotal}
          product={product}
          setProduct={setProduct}
          addItemToBag={addItemToBag}
          orderQty={orderQty}
          setOrderQty={setOrderQty}
          orderSummary={orderSummary}
          setOrderSummary={setOrderSummary}
          reviewData={reviewData}
          setReviewData={setReviewData}
          reviews={reviews}
          setReviews={setReviews}
        />
      </main>
      <Footer />
    </>
  );
}
